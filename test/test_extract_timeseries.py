from pathlib import Path

import pandas as pd
import pytest

from src.definitions import WeatherVariable
from src.extract_timeseries import get_historical_timeseries
from test.test_api_request import coordinate


@pytest.fixture
def historical_data():
    return pd.read_csv(Path(__file__).parent / 'historical_test_data.csv', index_col=0, parse_dates=True)


@pytest.fixture
def daily_data():
    return pd.DataFrame(
        index=pd.Index([
            1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
            1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
            1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
            2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
            2022
        ], dtype='int32'),
        data={
            WeatherVariable.TEMPERATURE.value: [
                18.6, 26.3, 21.6, 21.4, 22.2, 20.0, 12.4, 20.2, 18.6, 21.9, 20.9, 24.0, 25.5, 28.8, 16.7, 26.7, 22.0,
                21.6, 19.0, 20.6, 26.0, 21.6, 23.4, 15.6, 20.1, 22.4, 25.7, 19.3, 20.4, 22.6, 17.0, 14.0, 23.9, 21.1,
                20.4, 16.6, 24.6, 18.0, 19.4, 22.2, 18.6, 26.0, 22.5, 22.4, 23.9, 16.8, 13.1, 12.0, 22.5, 14.3, 26.3,
                17.4, 26.8, 27.7, 19.9, 27.1, 22.8, 17.4, 29.0, 15.2, 17.0, 27.7, 21.2, 19.4, 23.7, 19.0, 25.3, 30.4,
                15.7, 22.0, 21.5, 24.0, 23.7
            ]
        }
    )


@pytest.fixture
def weekly_data():
    return pd.DataFrame(
        index=pd.Index([
            1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
            1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
            1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
            2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
            2022
        ], dtype='int64'),
        data={
            WeatherVariable.TEMPERATURE.value: [
                22.771428571428572, 23.457142857142856, 21.37142857142857, 20.7, 23.04285714285714, 21.614285714285717,
                15.671428571428574, 22.814285714285713, 21.21428571428571, 22.45714285714286, 21.02857142857143,
                22.514285714285712, 23.042857142857144, 20.371428571428574, 20.02857142857143, 22.657142857142855,
                21.900000000000002, 18.785714285714285, 20.771428571428572, 19.814285714285713, 23.02857142857143,
                15.700000000000001, 18.914285714285715, 19.057142857142857, 19.271428571428572, 17.028571428571432,
                22.485714285714284, 20.571428571428573, 18.342857142857145, 16.728571428571428, 17.857142857142858,
                14.614285714285714, 19.32857142857143, 17.285714285714285, 20.95714285714286, 16.52857142857143,
                24.957142857142856, 15.157142857142857, 19.37142857142857, 20.885714285714283, 20.714285714285715,
                17.428571428571427, 20.585714285714285, 21.0, 21.900000000000002, 19.400000000000002, 19.75714285714286,
                18.085714285714285, 20.914285714285715, 17.4, 24.285714285714285, 17.914285714285715, 28.3,
                24.04285714285714, 17.985714285714288, 24.428571428571427, 26.02857142857143, 22.885714285714283,
                21.928571428571427, 18.985714285714284, 15.528571428571428, 21.285714285714285, 24.928571428571427,
                27.25714285714286, 20.7, 16.885714285714286, 19.71428571428572, 25.6, 22.67142857142857,
                23.157142857142855, 19.87142857142857, 27.02857142857143, 26.8
            ]
        }
    )


@pytest.fixture
def monthly_data():
    return pd.DataFrame(
        index=pd.Index([
            1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
            1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
            1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
            2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
            2022
        ], dtype='int64'),
        data={
            WeatherVariable.TEMPERATURE.value: [
                22.067741935483873, 20.729032258064517, 19.732258064516135, 19.129032258064516, 19.487096774193546,
                18.13225806451613, 18.629032258064516, 19.167741935483868, 19.851612903225806, 18.880645161290317,
                19.738709677419358, 17.99032258064516, 17.20967741935484, 19.17741935483871, 21.53870967741935,
                17.438709677419357, 19.751612903225805, 16.41290322580645, 18.89032258064516, 18.370967741935488,
                19.187096774193552, 17.325806451612905, 17.861290322580643, 19.090322580645164, 16.95483870967742,
                16.912903225806453, 19.400000000000002, 19.07741935483871, 18.954838709677418, 21.209677419354836,
                18.69677419354839, 19.312903225806448, 21.06451612903226, 18.112903225806452, 17.725806451612904,
                18.629032258064516, 18.187096774193552, 16.93225806451613, 18.93870967741935, 19.325806451612905,
                17.693548387096776, 17.048387096774192, 20.82903225806452, 21.506451612903227, 18.935483870967747,
                17.916129032258063, 20.906451612903226, 18.94193548387097, 20.200000000000006, 19.94516129032258,
                21.948387096774194, 18.651612903225804, 21.551612903225806, 25.238709677419354, 18.24516129032258,
                20.480645161290326, 18.890322580645158, 21.95806451612903, 21.467741935483875, 19.309677419354838,
                19.203225806451613, 20.91612903225806, 21.109677419354835, 18.480645161290322, 21.21612903225807,
                19.719354838709677, 19.338709677419356, 23.193548387096772, 23.43225806451613, 21.783870967741937,
                18.299999999999997, 21.17096774193548, 22.045161290322582
            ]
        }
    )


def test_get_historical_timeseries(coordinate, historical_data, daily_data, weekly_data, monthly_data):
    actual_daily_data, actual_weekly_data, actual_monthly_data = get_historical_timeseries(
        coordinate=coordinate,
        data_historical=historical_data
    )

    pd.testing.assert_frame_equal(daily_data, actual_daily_data)
    pd.testing.assert_frame_equal(weekly_data, actual_weekly_data)
    pd.testing.assert_frame_equal(monthly_data, actual_monthly_data)
